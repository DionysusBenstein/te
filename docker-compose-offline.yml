version: "3.9"

services:
  zookeeper:
    container_name: zookeeper
    image: zookeeper
    hostname: zookeeper
    ports:
      - 2181:2181

  kafka:
    image: confluentinc/cp-kafka:5.4.0
    container_name: kafka
    hostname: kafka
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:29092,PLAINTEXT_HOST://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://192.168.1.25:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  redis:
    image: redis
    container_name: redis
    hostname: redis
    restart: unless-stopped
    volumes:
      - ./redis/data:/data
      - ./redis/redis.conf:/usr/local/etc/redis.conf
    ports:
      - 6379:6379
    command: redis-server /usr/local/etc/redis.conf

  postgres:
    container_name: postgres
    hostname: postgres
    image: postgres
    ports:
      - 5432:5432
    volumes:
      - ./postgres/scripts:/docker-entrypoint-initdb.d
      - ./postgres/pgdata:/var/lib/postgresql/pgdata
    environment:
      POSTGRES_DB: trade_history
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: b7Mg4UmK
      PGDATA: /var/lib/postgresql/pgdata

  marketprice:
    container_name: marprice
    image: trading_engine_marketprice
    environment:
      - NODE_ENV=production
    env_file:
      - marketprice/.env
    volumes:
      - ./marketprice:/usr/src/marketprice
      - /usr/src/marketprice/node_modules
    ports:
      - 3000:3000
    depends_on:
      - zookeeper
      - kafka
    restart: always
    command:
      - /bin/bash
      - -c
      - |
        npm run build
        npm start

  matchengine:
    container_name: matchengine
    image: trading_engine_matchengine
    environment:
      - NODE_ENV=production
    env_file:
      - matchengine/.env
    volumes:
      - ./matchengine:/usr/src/matchengine
      - /usr/src/matchengine/node_modules
    ports:
      - 3001:3001
    depends_on:
      - kafka
    restart: always
    command:
      - /bin/bash
      - -c
      - |
        npm run build
        npm start

  readhistory:
    container_name: readhistory
    image: trading_engine_readhistory
    environment:
      - NODE_ENV=production
    env_file:
      - readhistory/.env
    volumes:
      - ./readhistory:/usr/src/readhistory
      - /usr/src/readhistory/node_modules
    ports:
      - 3002:3002
    restart: always
    command:
      - /bin/bash
      - -c
      - |
        npm run build
        npm start

  router:
    container_name: router
    image: trading_engine_router
    environment:
      - NODE_ENV=production
    env_file:
      - router/.env
    volumes:
      - ./router:/usr/src/router
      - /usr/src/router/node_modules
    ports:
      - 3003:3003
    restart: always
    command:
      - /bin/bash
      - -c
      - |
        npm run build
        npm start

  websocket:
    container_name: websocket
    image: trading_engine_websocket
    environment:
      - NODE_ENV=production
    env_file:
      - websocket/.env
    volumes:
      - ./websocket:/usr/src/websocket
      - /usr/src/websocket/node_modules
    ports:
      - 3031:3031
    restart: always
    command:
      - /bin/bash
      - -c
      - |
        npm run build
        npm start

volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local
  pg-dataset: