version: "3.9"

services:
  postgres:
    container_name: postgres
    image: postgres
    ports:
      - "5432:5432"
    volumes:
      - ./postgres:/docker-entrypoint-initdb.d
      - ./postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: trade_history
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: b7Mg4UmK
      PGDATA: '/var/postgresql/data/pgdata'

  marketprice:
    container_name: marketprice
    build: ./marketprice
    env_file:
      - marketprice/.env
    volumes:
      - ./marketprice:/usr/src/marketprice
      - /usr/src/marketprice/node_modules
    ports:
      - "3000:3000"
    networks:
      - main-networks
    restart: always
    command: npm run dev

  matchengine:
    container_name: matchengine
    build: ./matchengine
    env_file:
      - matchengine/.env
    volumes:
      - ./matchengine:/usr/src/matchengine
      - /usr/src/matchengine/node_modules
    ports:
      - "3001:3001"
    networks:
      - main-networks
    restart: always
    command: npm run dev

  readhistory:
    container_name: readhistory
    build: ./readhistory
    env_file:
      - readhistory/.env
    volumes:
      - ./readhistory:/usr/src/readhistory
      - /usr/src/readhistory/node_modules
    ports:
      - "3002:3002"
    networks:
      - main-networks
    restart: always
    command: npm run dev

  router:
    container_name: router
    build: ./router
    env_file:
      - readhistory/.env
    volumes:
      - ./router:/usr/src/router
      - /usr/src/router/node_modules
    ports:
      - "3003:3003"
    networks:
      - main-networks
    restart: always
    command: npm run dev


volumes:
  pg-dataset:
networks:
  main-networks:
    driver: bridge
