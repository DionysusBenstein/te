version: "3.9"

services:
  zookeeper:
    image: docker.io/bitnami/zookeeper:3.7
    ports:
      - "2181:2181"
    volumes:
      - "zookeeper_data:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
  kafka:
    image: docker.io/bitnami/kafka:3.1
    ports:
      - "9092:9092"
    volumes:
      - "kafka_data:/bitnami"
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper
  redis:
    image: redis
    container_name: redis1
    restart: unless-stopped
    network_mode: bridge
    volumes:
      - ./redis:/data
    ports:
      - "6379:6379"
  postgres:
    container_name: postgres
    image: postgres
    ports:
      - "5432:5432"
    volumes:
      - ./postgres:/docker-entrypoint-initdb.d
      - ./postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: trade_history
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: b7Mg4UmK
      PGDATA: "/var/postgresql/data/pgdata"

  marketprice:
    container_name: marketprice
    build: ./marketprice
    env_file:
      - marketprice/.env
    volumes:
      - ./marketprice:/usr/src/marketprice
      - /usr/src/marketprice/node_modules
    ports:
      - "3000:3000"
    networks:
      - main-networks
    restart: always
    command: npm run dev

  matchengine:
    container_name: matchengine
    build: ./matchengine
    env_file:
      - matchengine/.env
    volumes:
      - ./matchengine:/usr/src/matchengine
      - /usr/src/matchengine/node_modules
    ports:
      - "3001:3001"
    networks:
      - main-networks
    restart: always
    command: npm run dev

  readhistory:
    container_name: readhistory
    build: ./readhistory
    env_file:
      - readhistory/.env
    volumes:
      - ./readhistory:/usr/src/readhistory
      - /usr/src/readhistory/node_modules
    ports:
      - "3002:3002"
    networks:
      - main-networks
    restart: always
    command: npm run dev

  router:
    container_name: router
    build: ./router
    env_file:
      - readhistory/.env
    volumes:
      - ./router:/usr/src/router
      - /usr/src/router/node_modules
    ports:
      - "3003:3003"
    networks:
      - main-networks
    restart: always
    command: npm run dev

volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local
  pg-dataset:
networks:
  main-networks:
    driver: bridge
